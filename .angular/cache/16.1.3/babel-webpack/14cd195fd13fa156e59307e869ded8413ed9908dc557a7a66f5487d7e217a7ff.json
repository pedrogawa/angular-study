{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class SharedService {\n  constructor() {\n    this.userSource = new BehaviorSubject(null);\n    this.selectedUser = this.userSource.asObservable();\n  }\n  changeUser(user) {\n    this.userSource.next(user);\n  }\n}\nSharedService.ɵfac = function SharedService_Factory(t) {\n  return new (t || SharedService)();\n};\nSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedService,\n  factory: SharedService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["BehaviorSubject","SharedService","constructor","userSource","selectedUser","asObservable","changeUser","user","next","factory","ɵfac","providedIn"],"sources":["/Users/pedroferreira/Desktop/Projects/Study/todoApp/angular-study/src/app/sharedService.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SharedService {\n  private userSource = new BehaviorSubject<any | null>(null);\n  selectedUser = this.userSource.asObservable();\n\n  constructor() {}\n\n  changeUser(user: any) {\n    this.userSource.next(user);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,aAAa;EAIxBC,YAAA;IAHQ,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAa,IAAI,CAAC;IAC1D,KAAAI,YAAY,GAAG,IAAI,CAACD,UAAU,CAACE,YAAY,EAAE;EAE9B;EAEfC,UAAUA,CAACC,IAAS;IAClB,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,IAAI,CAAC;EAC5B;;AARWN,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAQ,OAAA,EAAbR,aAAa,CAAAS,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}